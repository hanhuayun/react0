{"version":3,"sources":["react/Header.js","react/Home0.js","react/RouteWithSubRoutes.js","react/Doc.js","react/Tuto.js","react/Blog.js","react/Comm.js","react/Login.js","router.config.js","react/Core.js","react/Guide.js","react/Api.js","react/Hook.js","App.js","index.js"],"names":["Header","activeClassName","exact","to","Home0","props","style","textAlign","onClick","history","push","RouteWithSubRoutes","route","pri","PrivateRoute","path","component","routes","Doc","className","from","map","i","key","Tuto","Blog","Comm","Login","localStorage","setItem","replace","location","state","Component","Com","rest","render","getItem","pathname","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.625aec63.chunk.js","sourcesContent":["import React from 'react'\r\nimport {BrowserRouter as Router,Route,NavLink,Switch,Redirect} from 'react-router-dom'\r\nimport './Header.css'\r\n// import Home0 from './Home0'\r\n// import Doc from './Doc'\r\n// import Tuto from './Tuto'\r\n// import Blog from './Blog'\r\n// import Comm from './Comm'\r\n// import Login from './Login'\r\n\r\nconst Header = () => {\r\n    return (\r\n            <header>\r\n                <nav>\r\n                    <NavLink activeClassName='active' exact to='/'>React</NavLink>\r\n                    <NavLink activeClassName='active' to='/doc'>文档</NavLink>\r\n                    <NavLink activeClassName='active' to='/tuto'>教程</NavLink>\r\n                    <NavLink activeClassName='active' to='/blog'>博客</NavLink>\r\n                    <NavLink activeClassName='active' to='/comm'>社区</NavLink>\r\n                </nav>\r\n            </header>\r\n           \r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nconst Home0 = (props) => {\r\n    return (\r\n        <div style={{textAlign:\"center\"}}>\r\n            <h2>React</h2>\r\n            <p>用于构建用户界面的 JavaScript 库</p>\r\n            <div>\r\n                <button onClick={()=>props.history.push('/doc')}>快速开始</button>\r\n                <button onClick={()=>props.history.push('/tuto')}>入门教程</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home0\r\n","import React from 'react'\r\nimport {Route} from 'react-router-dom'\r\nimport {PrivateRoute} from '../App'\r\n\r\nconst RouteWithSubRoutes = (route) => {\r\n    if(route.pri){\r\n        return <PrivateRoute path={route.path} component={route.component} routes={route.routes} />\r\n    }\r\n    else{\r\n        return <Route  exact={route.exact} path={route.path} component={route.component}  routes={route.routes}/>\r\n    }\r\n}\r\n\r\nexport default RouteWithSubRoutes;\r\n","import React from 'react'\r\nimport {NavLink,Route,Redirect,Switch} from 'react-router-dom'\r\nimport './Doc.css'\r\nimport RouterWithSubRoutes from './RouteWithSubRoutes'\r\n\r\nconst Doc=(props)=>{\r\n    return(\r\n        <div className='doc'>\r\n            <div className=\"content\">\r\n                <Redirect from='./doc' to='./doc/core'/>\r\n                <Switch>\r\n                    {props.routes.map((route,i)=>{\r\n                    return <RouterWithSubRoutes key={i} {...route}/>\r\n                    })}    \r\n                </Switch>\r\n            </div>\r\n            <ol>\r\n                <li><NavLink to='/doc/core'>核心概念</NavLink></li>\r\n                <li><NavLink to='/doc/guide'>高级指引</NavLink></li>\r\n                <li><NavLink to='/doc/api'>API</NavLink></li>\r\n                <li><NavLink to='/doc/hooks'>Hooks</NavLink></li>\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\nexport default Doc;\r\n\r\n\r\n// import React,{useEffect,NavBar,Icon,} from 'react'\r\n// import { NavLink,\r\n//     BrowserRouter as Router,\r\n//     Route,Redirect,\r\n//     useHistory,\r\n//     useLocation,\r\n//     useParams,\r\n//     useRouteMatch,\r\n//     withRouter,\r\n//     Switch\r\n// } from 'react-router-dom'\r\n// import routes from '../router.config'\r\n// import './Doc.css'\r\n// import RouteWithSubRoutes from './RouteWithSubRoutes'\r\n\r\n\r\n// // const DocContent=(props)=>{\r\n// //     return <h1>{props.match.params.type}</h1>\r\n// // }\r\n// const Doc = (props) => {\r\n\r\n\r\n//     // const history=useHistory();\r\n//     // const params=useParams();\r\n//     // const location=useLocation();\r\n//     // const routematch=useRouteMatch();\r\n//     // console.log(history);\r\n//     // console.log(params);\r\n//     // console.log(location);\r\n//     // console.log(routematch);\r\n\r\n\r\n//     // console.log(props);\r\n//     // useEffect(() => {\r\n//     //     if(!localStorage.getItem('userinfo')){\r\n//     //         props.history.push({\r\n//     //             pathname:'/login',\r\n//     //             state:props.location\r\n//     //         });\r\n//     //     }\r\n//     // }, [])\r\n//     return (\r\n//         <div className='doc'>\r\n//             <div className=\"content\">\r\n//                 {/* 嵌套路由 */}\r\n//                 {/* <Route path='/doc/:type' component={DocContent}></Route> */}\r\n//                 <Redirect from='/doc' to='/doc/core'/>\r\n//             </div>\r\n//             <ol>\r\n//                 <li><NavLink to='/doc/core'>核心概念</NavLink></li>\r\n//                 <li><NavLink to='/doc/guide'>高级指引</NavLink></li>\r\n//                 <li><NavLink to='/doc/api'>API</NavLink></li>\r\n//                 <li><NavLink to='/doc/hooks'>Hooks</NavLink></li>\r\n//             </ol>\r\n//             <Switch>\r\n//                 {props.routes.map((route,i)=>(\r\n//                     <RouteWithSubRoutes key={i} {...route}/>\r\n//                 ))}\r\n//             </Switch>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Doc;\r\n","import React from 'react'\r\n\r\nconst Tuto = () => {\r\n    return (\r\n        <div>\r\n            Tuto\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tuto\r\n","import React from 'react'\r\n\r\nconst Blog = () => {\r\n    return (\r\n        <div>\r\n            Blog\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blog\r\n","import React from 'react'\r\n\r\nconst Comm = () => {\r\n    return (\r\n        <div>\r\n            Comm\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comm\r\n","import React from 'react'\r\n\r\nconst Login = (props) => {\r\n    const login=()=>{\r\n        localStorage.setItem('userinfo','tom');\r\n        props.history.replace(props.location.state);\r\n    }\r\n    return (\r\n        <div>\r\n            <button onClick={login}>登录</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import Home0 from './react/Home0';\r\nimport Doc from './react/Doc';\r\nimport Tuto from './react/Tuto';\r\nimport Blog from './react/Blog';\r\nimport Comm from './react/Comm';\r\nimport Login from './react/Login';\r\nimport Core from './react/Core';\r\nimport Guide from './react/Guide';\r\nimport Api from './react/Api';\r\nimport Hook from './react/Hook';\r\nconst routes=[\r\n    {\r\n        path:'/',\r\n        exact:true,\r\n        component:Home0\r\n    },\r\n    {\r\n        path:'/doc',\r\n        component:Doc,\r\n        pri:true,\r\n        routes:[\r\n            {\r\n                path:'/doc/core',\r\n                component:Core,\r\n            },\r\n            {\r\n                path:'/doc/guide',\r\n                component:Guide,\r\n            },\r\n            {\r\n                path:'/doc/api',\r\n                component:Api,\r\n            },\r\n            {\r\n                path:'/doc/hooks',\r\n                component:Hook,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        path:'/tuto',\r\n        component:Tuto,\r\n        pri:true\r\n    },\r\n    {\r\n        path:'/blog',\r\n        component:Blog\r\n    },\r\n    {\r\n        path:'/comm',\r\n        component:Comm\r\n    },\r\n    {\r\n        path:'/login',\r\n        component:Login\r\n    }\r\n]\r\nexport default routes;","import React, { Component } from 'react'\r\n\r\nexport default class Core extends Component {\r\n    render() {\r\n        return (\r\n            <h2>\r\n                Core\r\n            </h2>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Guide extends Component {\r\n    render() {\r\n        return (\r\n            <h2>\r\n                Guide\r\n            </h2>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Api extends Component {\r\n    render() {\r\n        return (\r\n            <h2>\r\n                Api\r\n            </h2>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Hook extends Component {\r\n    render() {\r\n        return (\r\n            <h2>\r\n                Hooks\r\n            </h2>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {BrowserRouter as Router,Redirect,Route,NavLink,Switch} from 'react-router-dom'\r\nimport Header from './react/Header';\r\nimport Home0 from './react/Home0';\r\nimport Doc from './react/Doc';\r\nimport Tuto from './react/Tuto';\r\nimport Blog from './react/Blog';\r\nimport Comm from './react/Comm';\r\nimport Login from './react/Login';\r\nimport routes from './router.config';\r\nimport RouteWithSubRoutes from './react/RouteWithSubRoutes';\r\n\r\n//pc端页面\r\n// 路由基本配置\r\n// 路由传参(以及获取参数-props)\r\n// 动态路由(/:page)\r\n// js跳转\r\n// 权限路由\r\n// npm i antd-mobile --registry https://\r\nfunction PrivateRoute({ component:Com, ...rest }) {\r\n\treturn (\r\n\t  <Route\r\n\t\t{...rest}\r\n\t\trender={({ location }) =>\r\n\t\t   localStorage.getItem('userinfo')\r\n\t\t   ?<Com {...rest}/> \r\n\t\t   : (\r\n\t\t\t<Redirect\r\n\t\t\t  to={{\r\n\t\t\t\tpathname: \"/login\",\r\n\t\t\t\tstate: location \r\n\t\t\t  }}\r\n\t\t\t/>\r\n\t\t  )\r\n\t\t}\r\n\t  />\r\n\t);\r\n  }\r\n\r\nfunction App() {\r\n\treturn <Router>\r\n\t\t<Header />\r\n\t\t<Switch>\r\n\t\t\t{\r\n\t\t\t\troutes.map((route, i) => (\r\n\t\t\t\t\t<RouteWithSubRoutes key={i} {...route} />\r\n\t\t\t\t))\r\n\t\t\t}\r\n\t\t</Switch>\r\n\t</Router>;\r\n}\r\nexport {PrivateRoute,App};\r\n      //方法三\r\n\t\t\t// <Route exact path='/' component={Home0} />\r\n\t\t\t// {/* <Route path='/doc:id' component={Doc}></Route> */}\r\n\t\t\t// <PrivateRoute path='/doc' component={Doc} />\r\n\t\t\t// <PrivateRoute path='/tuto' component={Tuto}/>\r\n\t\t\t// <PrivateRoute path='/blog' component={Blog}/>\r\n\t\t\t// <Route path='/comm' component={Comm}/>\r\n\t\t\t// <Route path='/login' component={Login}/>\r\n\t\t\t// {/* no-match */ }\r\n\t\t\t// {/* <Route component={()=><div>404</div>} /> */ }\r\n            // <Route path='*' component={()=><div>404</div>}/>","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import Control from './components/Control';\n// import Buttons from './components/Buttons';\n// import Home from './pages/Home';\n// import Demo01 from './pages/Demo01';\n// import App from './pages/App';\n// import Hoc from './pages/Hoc';\n// import {Detail} from './pages/Hoc';//命名导出\n// import Hook from './pages/Hook';\n// import Context from './pages/Context'\n// import TodoList from './components/TodoList';\n// import Web from '././pages/Web';\n// import Header from './pages/Header';\n// import App from './taobao/App';\nimport {App} from './App';\n\n\n// ReactDOM.render(\n//       < Header/>,\n//       document.getElementById('root')\n//     );\n\nReactDOM.render(\n      < App/>,\n      document.getElementById('root')\n    );\n\n// ReactDOM.render(\n//       <TodoList/>,\n//       document.getElementById('root')\n//     );\n\n// import $ from 'jquery';\n// console.log($);\n\n\n// ReactDOM.render(\n//   <Context.Provider value='123'><Hook/></Context.Provider>,\n//   document.getElementById('root')\n// );\n\n// ReactDOM.render(\n// <div><Hoc/>\n//   <Detail name='tom'/></div>,\n//   document.getElementById('root')\n// );\n\n// ReactDOM.render(\n//       <App/>,\n//       document.getElementById('root')\n//     );\n\n\n// ReactDOM.render(\n//       <Demo01/>,\n//       document.getElementById('root')\n//     );\n\n//rafce声明函数组件，直接导出\n//rcc直接创建类组件，并在index中引用\n// ReactDOM.render(\n//     <Control/>,\n//     document.getElementById('root')\n//   );\n\n//在页面中显示列表1,2,3,4,5\n// const List=()=>{\n//   const list=[1,2,3,4,5];\n//   return <div>\n//     {\n//       list.map((item)=><li key={item} >{item}</li>)\n//     }\n//   </div>\n// };\n// ReactDOM.render(\n//     <List/>,\n//     document.getElementById('root')\n// );\n\n\n//Alt+上下键 移动一行\n//按住Alt，鼠标点击\n//Ctrl+Alt+左右，选中整个单词\n//Ctrl+shift+L\n//Ctrl+左右，移动一个单词\n\n\n//跳转页面\n// const List=(props)=>{\n//   return <ul>\n//     { \n//       props.data.map((item)=><li key={item.id}>{item.title}</li>)\n//     }\n//   </ul>\n// };\n\n\n// class Home extends React.Component{\n//   constructor(){\n//     super();\n//     this.state={\n//       data:[]\n//     }\n//   }\n//   componentDidMount(){\n//     fetch('https://cnodejs.org/api/v1/topics').then(res=>res.json()).then(({data})=>{\n//       this.setState({data});\n      \n//   })\n//   }\n\n//   getData=(page)=>{\n//     fetch('https://cnodejs.org/api/v1/topics?page='+page).then(res=>res.json()).then(({data})=>{\n//       this.setState({data});\n//     })\n//   }\n//   render(){\n//     const {data}=this.state;\n//     const btns=[1,2,3,4,5];\n\n//     return <div>\n//       {\n//      btns.map((item)=><button key={item} onClick={()=>{\n//        this.getData(item)\n//      }}>{item}</button>\n//      )\n//      }\n//       <List data={data}/>\n//       </div>\n//   }\n// }\n\n// ReactDOM.render(\n//   <Home/>,\n//   document.getElementById('root')\n// );\n\n\n// const List=(props)=>{\n//   return <ul>\n//     { \n//       props.data.map((item)=><li key={item.id}>{item.title}</li>)\n//     }\n//   </ul>\n// }\n\n// const Buttons=()=>{\n//   const btns=[1,2,3,4,5];\n//   const handleClick=(item)=>{\n//     //参数，第一个事件对象，\n//     console.log(item);\n//   }\n//   return <div>\n//     {\n//       btns.map((item)=><button key={item} onClick={()=>handleClick(item)}>{item}</button>)\n//     }\n//   </div>\n// };\n\n// class Home extends React.Component{\n//   constructor(){\n//     super();\n//     this.state={\n//       data:[]\n//     }\n//     this.handleClick=this.handleClick.bind(this);\n\n//     //// setTimeout(()=>{\n//     ////   this.setState({data:[5,6,7,8,9]})\n//     //// },500)//延迟更换内容\n//   }\n//   componentDidMount(){\n//     fetch('https://cnodejs.org/api/v1/topics').then(res=>res.json()).then(({data})=>{\n//       this.setState({data});\n//       console.log(data);//data是一个对象，data.data数组\n//       console.log(data.data);\n//   })\n//   }\n//   // handleClick=()=>{\n//   //   console.log(this);\n//   // }\n \n//   render(){\n//     const {data}=this.state;\n//     return <div>\n//       {\n//         <button onClick={this.handleClick}>click</button>\n//         <Buttons/> \n//         <List data={data}/>\n//       }\n//   </div>\n//   }\n// }\n\n// ReactDOM.render(\n//   <Home/>,\n//   document.getElementById('root')\n// );\n\n\n\n\n// let ele=<h1 id=\"title\" className=\"tit\">\n//   <div>hello</div> \n//   <div>hello</div>\n//   <div>hello</div>\n//   react\n//   </h1>;\n// let ele=React.createElement('h1',{id:'title'},'hello react',React.createElement('div',{id:'div1'},1),React.createElement('div',{id:'div2'},2),React.createElement('div',{id:'div3'},3));\n// console.log(ele);\n\n\n\n// 自己写的reactdom对象，\n// let ReactDOM={\n//   render(eleObj,container){\n//     //解构\n//     const {type,props} = eleObj;\n//     //创建第一层节点\n//     let ele=document.createElement(type);\n//     //遍历属性对象，将属性添加到第一层节点对象上\n//     for(const prop in props){\n//       if(prop =='children'){\n//         //将第一层节点对象的子元素添加进去\n//         if(typeof props.children =='string'){\n//           const txtNode=document.createTextNode(props.children);\n//             ele.appendChild(txtNode);\n//             break;\n//         }//此判断是为了防止最后递归的props.children不是数组，那么foreach就不能用。\n//           props.children.forEach(child=>{\n//             if(typeof(child)=='string'){\n//               const txtNode=document.createTextNode(child);\n//               ele.appendChild(txtNode);\n//            }else{\n//              ReactDOM.render(child,ele);\n//            }    \n//           })\n//       }else{\n//           ele[prop]=props[prop];\n//       }\n//     }\n//     //将第一层DOM节点添加到\n//     container.appendChild(ele);\n//   }\n// }\n// ReactDOM.render(\n//   ele,\n//   document.getElementById('root')\n// );\n\n//渲染，每秒都要执行一次，reactdom.render()页面才能改变\n// function time(){\n//   let ele=<h1 id=\"title\" className=\"tit\">\n//   <div>当前时间</div>\n//   {new Date().toLocaleString()}\n//   </h1>;\n//   ReactDOM.render(\n//     ele,\n//     document.getElementById('root')\n//   );\n// }\n// setInterval(time,1000);\n\n\n\n//函数组件\n//UI（展示）组件，木偶组件\n//接收单一的 props 对象，返回一个 React 元素\n// function App(props){\n//   console.log(props);\n//   const {title,id,mini}=props;\n//   return <div>\n//     <h1></h1>\n//     <div>{title}</div>\n//     <div>{id}</div>\n//     <div>{mini}</div>\n//   </div>\n// }\n// ReactDOM.render(\n//   <App title='任意值' id='app'mini='abc'/>,\n//   document.getElementById('root')\n// );\n\n\n\n//智能组件\n// React 提供了 React.Component 抽象基础类\n// \t\t 直接引用 React.Component 几乎没意义，通常是继承它\n//  至少定义一个 render( ) 方法\n// class Demo extends React.Component{\n//   constructor(){\n//     super();\n//     //声明状态\n//     this.state={\n//       name:new Date().toLocaleString()\n//     }\n//     setInterval(()=>{\n//       this.setState({name:new Date().toLocaleString()})\n//     },1000)\n//   }\n//   render(){\n//     return <div>\n//       <div>name:{this.state.name}</div>\n//       <App title={this.state.name} id='app'/>\n//     </div>\n//   }\n// }\n// ReactDOM.render(\n//   <Demo/>,\n//   document.getElementById('root')\n// );\n\n\n\n\n\n"],"sourceRoot":""}